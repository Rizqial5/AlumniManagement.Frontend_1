@model AlumniManagement.Frontend.Models.AlumniModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.css">
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/fixedheader/3.1.7/css/fixedHeader.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/fixedcolumns/3.3.2/css/fixedColumns.dataTables.min.css">
    <style>
        .dataTables_wrapper {
            width: 100%;  
            /*height: 100px;*/
        }

        .dataTables_wrapper .dataTables_paginate {
            float: none;
            text-align: center;
        }

        .dataTables_wrapper .dataTables_info {
            float: left;
            padding-top: 0.755em;
        }

        .dataTables_wrapper .bottom {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        th {
            white-space: nowrap;
        }

        #alumniData td:nth-child(4),
        #alumniData th:nth-child(4) {
            min-width: 50px !important;
            max-width: 50px !important;
            text-align: center;
        }

        #alumniData img.preview-image {
            max-width: 50px !important;
            height: auto;
        }

        #alumniData td:nth-child(5),
        #alumniData th:nth-child(5) {
            min-width: 200px !important;
            max-width: 200px !important;
            white-space: nowrap;

        }

        #alumniData td:nth-child(10),
        #alumniData th:nth-child(10) {
            min-width: 300px !important;
            max-width: 300px !important;
        }

        #alumniData td:nth-child(17),
        #alumniData th:nth-child(17) {
            min-width: 200px !important;
            max-width: 200px !important;
        }
         
    </style>
}

<h2>Alumni</h2>


@if (User.IsInRole("Superadmin"))
{

    <div>
        <button class="btn btn-primary" id="createButton" data-toggle="modal" data-target="#createModal">Create Alumni</button>
        <a class="btn btn-primary" style="display:inline-block" href="@Url.Action("ExportExcel","Alumni")"> Export to Excel </a>
        <button id="deleteSelected" class="btn btn-danger">Delete Selected</button>
    </div>
    <div class="d-flex justify-content-between align-items-center mb-3 mt-3">
        <!-- Form Upload (Kiri) -->
        @using (Html.BeginForm("ShowTableView", "Alumni", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="border border-secondary p-3 shadow-sm" style="width: 100%; max-width: 400px;">
                <div class="d-flex align-items-center">
                    <input type="file" class="form-control me-2" name="file" accept=".xlsx, .xls" required style="width: 300px;" />
                    <button type="submit" class="btn btn-primary">Upload</button>
                </div>
            </div>
        }

        <!-- Dropdown Filters (Kanan) -->
        <div class="d-flex gap-3">
            <div>
                <label for="facultyFilter">Faculty</label>
                @Html.DropDownList("FacultyFilter", ViewBag.FacultyDdl as SelectList, "All Faculties", new { @class = "form-control", id = "facultyFilter" })
            </div>
            <div>
                <label for="majorFilter">Major</label>
                @Html.DropDownList("MajorFilter", ViewBag.MajorDDL as SelectList, "All Majors", new { @class = "form-control", id = "majorFilter" })
            </div>
        </div>
    </div>
}






<table class="table"  id="alumniData" >
    <thead>
        <tr>
            <th ><input type="checkbox" id="selectAll" /></th>
            <th >Actions</th>
            <th >No</th>
            <th >Photo</th>
            <th >@Html.DisplayNameFor(model => model.FullName)</th>
            <th >Gender</th>
            <th >@Html.DisplayNameFor(model => model.Email)</th>
            <th >@Html.DisplayNameFor(model => model.MobileNumber)</th>
            <th >Hobbies</th>
            <th >@Html.DisplayNameFor(model => model.FullAddress)</th>
            <th >@Html.DisplayNameFor(model => model.DateOfBirth)</th>
            <th >@Html.DisplayNameFor(model => model.GraduationYear)</th>
            <th >@Html.DisplayNameFor(model => model.Degree)</th>
            <th >@Html.DisplayNameFor(model => model.FacultyName)</th>
            <th >@Html.DisplayNameFor(model => model.MajorName)</th>
            <th >@Html.DisplayNameFor(model => model.LinkedInProfile)</th>
            <th >@Html.DisplayNameFor(model => model.ModifiedDate)</th>
        </tr>
    </thead>
</table>

<div id="modalContainer"></div>

<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel"></h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <img id="modalImage" src="" class="img-fluid" alt="Alumni Image">
            </div>
        </div>
    </div>
</div>



@section scripts {
    <!-- Include jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Include Select2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    @Scripts.Render("~/bundles/custom")
    @Scripts.Render("~/bundles/jqueryval")

    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.1.7/js/dataTables.fixedHeader.min.js"></script>
    <script src="https://cdn.datatables.net/fixedcolumns/3.3.2/js/dataTables.fixedColumns.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
    <script>
        var isInSuperAdmin =  @Html.Raw(Json.Encode(ViewBag.SuperAdmin))
    </script>
    <script>
        $(document).ready(function () {
            $.fn.dataTable.ext.errMode = 'none';
            var table = $('#alumniData').DataTable({
                "processing": true,
                "serverSide": false,
                "deferRender": true,   // Optimalkan rendering
                "stateSave": true,     // Simpan state saat refresh
                "bDestroy": true,      // Hindari error saat re-init
                "bAutoWidth": false,   // Hindari width yang salah
                "bSortCellsTop": true,
                "ajax": {
                    "url": "/Alumni/GetAlumnis",
                    "type": "GET",
                    "datatype": "json"
                },
                "columns": [
                    { "data": null, "width": "50px", "render": function (data, type, row) { return '<input type="checkbox" class="selectCheckbox" data-id="' + row.AlumniID + '" />'; } },
                    {
                        "data": null, "width": "150px", "render": function (data, type, row) {
                            var editButton = '<a class="btn btn-primary" id="editButton" data-id="' + row.AlumniID + '" data-toggle="modal" data-target="#editModal" style="margin-right: 5px;"><i class="fas fa-edit"></i></a>';
                            var deleteButton = '<button id="deleteButton" class="btn btn-danger deleteButton" data-id="' + row.AlumniID + '">' +
                                '<i class="fas fa-trash"></i></button>';
                            var groupButton = '<div class="btn-group mt-3">' +
                                '<a href="/Job/Index?alumniId=' + row.AlumniID + '" class="btn btn-primary" style="margin-right: 5px;">' +
                                '<i class="fas fa-briefcase"></i></a>' +
                                '<a href="/AlumniImage/Index?alumniId=' + row.AlumniID + '" class="btn btn-primary" style="margin-right: 5px;">' +
                                '<i class="fas fa-image"></i></a>' +
                                '</div>';
                            return isInSuperAdmin ? '<div class="btn-group">' + editButton + deleteButton + '</div>' + groupButton : '';
                        }
                    },
                    { "data": null, "width": "50px", "render": function (data, type, row, meta) { return meta.row + 1; } },
                    {
                        "data": null, "width": "50px", "render": function (data, type, row) {
                            return row.ShowImagePath ? '<div><img class="img-thumbnail preview-image" src="' + row.ShowImagePath +
                                '" alt="Alumni Image" style="max-width: 120px; cursor: pointer;" ' +
                                'data-src="' + row.ShowImagePath + '" data-name="' + row.FullName + '"/></div>' : "";
                        }
                    },
                    { "data": "FullName", "width": "200px" },
                    { "data": "Gender", "width": "100px" },
                    { "data": "Email", "width": "200px" },
                    { "data": "MobileNumber", "width": "150px" },
                    { "data": "HobbiesListName", "width": "200px" },
                    { "data": "FullAddress", "width": "250px" },
                    { "data": "ShowDateOfBirth", "width": "150px", "render": function (data) { return moment(data).format('DD-MMM-yyyy'); } },
                    { "data": "GraduationYear", "width": "100px" },
                    { "data": "Degree", "width": "150px" },
                    { "data": "FacultyName", "width": "200px" },
                    { "data": "MajorName", "width": "200px" },
                    { "data": "LinkedInProfile", "width": "200px" },
                    { "data": "ModifiedDate", "width": "180px", "render": function (data) { return moment(data).format('DD-MMM-YYYY HH:mm:ss'); } }
                ],
                "dom": '<"top"f>rt<"bottom"lpi><"clear">',
                "autoWidth": false,
                "pagingType": "full_numbers",
                "scrollY": "400px",
                "scrollX": true,
                "scrollCollapse": true,
                "fixedHeader": true,
                "pageLength": 10,
                "lengthMenu": [5, 10, 20, 30, 100],
                "language": {
                    "paginate": {
                        "previous": "Previous",
                        "next": "Next",
                        "first": "<<",
                        "last": ">>"
                    }
                },
                "fixedColumns": {
                    "leftColumns": 3     // Number of columns to freeze on the left
                }
            });


            $('#selectAll').on('click', function () {
                var rows = table.rows({ 'search': 'applied' }).nodes();
                $('input[type="checkbox"]', rows).prop('checked', this.checked)
            })

        });

        // Menangkap error DataTables agar tidak muncul alert default
        $('#alumniData').on('error.dt', function (e, settings, techNote, message) {
            
            Swal.fire({
                icon: "error",
                title: "Error",
                text: "An error occurred while loading data."
            });
        });

        function reloadTable() {
            var facultyId = $('#facultyFilter').val();
            var majorId = $('#majorFilter').val();

            $('#alumniData').DataTable().ajax.url('/Alumni/GetAlumnis?facultyId=' + facultyId + '&majorId=' + majorId).load();
        }

        function loadMajors(facultyId) {
            $.ajax({
                url: '/Alumni/GetMajorsByFaculty',
                type: 'GET',
                data: { facultyId: facultyId },
                success: function (data) {
                    var $majorDropdown = $('#majorFilter');
                    $majorDropdown.empty(); // Kosongkan dropdown major

                    // Tambahkan opsi default
                    $majorDropdown.append('<option value="">All Majors</option>');

                    // Loop dan tambahkan opsi major dari hasil AJAX
                    $.each(data, function (index, item) {
                        $majorDropdown.append('<option value="' + item.MajorID + '">' + item.MajorName + '</option>');
                    });

                    // Trigger reload DataTable setelah major diperbarui
                    reloadTable();
                }
            });
        }

        // Event saat Faculty dipilih
        $('#facultyFilter').on('change', function () {
            var facultyId = $(this).val();
            if (facultyId) {
                loadMajors(facultyId);
            } else {
                $('#majorFilter').html('<option value="">All Majors</option>');
            }

            reloadTable(); // Reload tabel alumni setelah faculty dipilih
        });

        // Trigger reload when dropdown changes
        $('#facultyFilter, #majorFilter').on('change', function () {
            reloadTable();
        });

        ////Use this for datatables, becase the buttons are created dynamically
        $(document).on('click', '#deleteButton', function () {
            const itemId = $(this).data('id'); // Retrieve the ID of the item to delete

            Swal.fire({
                title: "Are you sure?",
                text: "Once deleted, you will not be able to recover this item!",
                icon: "warning",
                showCancelButton: true, // Enable the cancel button
                buttons: true,
                dangerMode: true,
            })
                .then((result) => {
                    if (result.isConfirmed) {
                        // Make an AJAX call to delete the item
                        Swal.fire({
                            title: "Processing...",
                            text: "Please wait while we delete the item.",
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            willOpen: () => {
                                Swal.showLoading(); // Menampilkan animasi loading
                            }
                        });
                        $.ajax({
                            url: '/Alumni/Delete', // URL of your Delete method
                            type: 'POST', // Use POST for data modification
                            data: { id: itemId }, // Pass the ID as data
                            success: function (response) {
                                Swal.close();
                                if (response.success) {
                                    Swal.fire("Deleted!", response.message, "success").then(() => {
                                        $("#alumniData").DataTable().ajax.reload(); // Reload the page or update UI
                                    });
                                } else {
                                    Swal.fire("Error!", response.message, "error");
                                }
                                //.then(() => {
                                //    // Optional: Reload the page or update the UI
                                //    location.reload();
                                //});
                            },
                            error: function (error) {
                                Swal.close();
                                Swal.fire("Error!", "Unable to delete the item " + response.message + " . Please try again.", "error");
                            }
                        });
                    } else if (result.dismiss == Swal.DismissReason.cancel) {
                        Swal.fire("Your item is safe!");
                    }
                });
        });

        /*     Delete selected rows*/
        $('#deleteSelected').on('click', function () {
            var selectedIds = [];
            $('.selectCheckbox:checked').each(function () {
                selectedIds.push($(this).data('id'));
            });

            if (selectedIds.length > 0) {
                Swal.fire({
                    title: "Are you sure? you will not be able to recover these items!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, delete them!",
                    cancelButtonText: "No, keep them"
                }).then((result) => {
                    if (result.isConfirmed) {
                        Swal.fire({
                            title: "Processing...",
                            text: "Please wait while we delete the item.",
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            willOpen: () => {
                                Swal.showLoading(); // Menampilkan animasi loading
                            }
                        });

                        // Make an AJAX call to delete the selected items
                        $.ajax({
                            url: '/Alumni/DeleteSelected/',
                            type: 'POST',
                            data: { ids: selectedIds },
                            traditional: true,
                            success: function (response) {
                                Swal.close();
                                if (response.success) {
                                    Swal.fire("Deleted!", response.message, "success").then(() => {
                                        $('#alumniData').DataTable().ajax.reload(); // Reload the DataTable
                                    });
                                } else {
                                    Swal.fire("Error!", response.message, "error");
                                }
                            },
                            error: function (error) {
                                Swal.close();
                                Swal.fire("Error!", "Unable to delete the items. Please try again.", "error");
                            }
                        });
                    } else if (result.dismiss === Swal.DismissReason.cancel) {
                        Swal.fire("Cancelled", "Your items are safe :)", "error");
                    }
                });
            } else {
                Swal.fire("No items selected", "Please select items to delete.", "info");
            }
        });


        $(document).ready(function () {
            var table = $('#alumniData').DataTable();

            // Unbind the default search event
            $('#alumniData_filter input').unbind();

            // Bind a new event handler
            $('#alumniData_filter input').on('keyup', function (e) {
                var value = $(this).val();
                if (value.length >= 3 || value.length === 0) {
                    table.search(value).draw();
                }
            });
        });

        $(document).ready(function () {
            // Event listener untuk klik gambar
            $('#alumniData').on('click', '.preview-image', function () {
                var imageUrl = $(this).data('src'); // Ambil URL gambar dari atribut data-src
                var fullName = $(this).data('name'); // Ambil nama alumni dari atribut data-name
                $('#modalImage').attr('src', imageUrl); // Set gambar di modal
                $('#imageModalLabel').text(fullName); // Set nama alumni sebagai judul modal
                $('#imageModal').modal('show'); // Tampilkan modal
            });
        });


        //mengatur partial views yang ada pada create
        $(document).on('click', '#createButton', function () {

            $.ajax({
                url: '@Url.Action("Create", "Alumni")',
                type: 'GET',
                success: function(data) {
                    $('#modalContainer').html(data);
                    var myModal = new bootstrap.Modal(document.getElementById('createModal'));

                    //inisialisasi
                    updateDistrictDropdown('/Alumni/ShowDistrictList');
                    updateMajorDropdown('/Alumni/ShowMajorList');

                    //inisialisasi select 2
                    initializeSelect2('#ddlHobby', 'Select hobbies', '#createModal');
                    initializeSelect2('#FacultyDropdown', 'Select faculty', '#createModal');
                    initializeSelect2('#DistrictDropdown', 'Select district', '#createModal');

                    reinitializeValidation();

                    $('#FacultyDropdown').on('change', function () {
                        $(this).valid(); // Memeriksa kembali validasi
                    });

                    $('#DateOfBirth').datepicker({
                        format: "dd-M-yyyy",
                        autoclose: true,
                        todayHighlight: true,
                        endDate: new Date()
                    });


                    $(document).on('change', '#photoUpload', function (event) {
                        var file = event.target.files[0];
                        if (file) {
                            var fileSize = file.size / 1024 / 1024; // Convert to MB
                            var fileType = file.type;
                            var validExtensions = ["image/jpeg", "image/jpg", "image/png"];

                            if (!validExtensions.includes(fileType)) {
                                alert("Invalid file type. Only JPEG, JPG, and PNG are allowed.");
                                $(this).val(""); // Reset file input
                                return;
                            }

                            if (fileSize > 3) {
                                alert("File size exceeds 3MB. Please select a smaller file.");
                                $(this).val(""); // Reset file input
                                return;
                            }

                            // Preview Image
                            var reader = new FileReader();
                            reader.onload = function () {
                                $('#photoPreview').attr('src', reader.result).removeClass('d-none');
                            };
                            reader.readAsDataURL(file);
                        }
                    });

                    myModal.show();
                },
                error: function (xhr) {
                    // Menampilkan pesan error dari response JSON
                    let errorMessage = xhr.responseJSON && xhr.responseJSON.message
                        ? xhr.responseJSON.message
                        : "An unknown error occurred";

                    Swal.fire("Error Load Form", errorMessage, "error");
                }
            });
        });


        // mengatur partial views yang ada di edit
        $(document).on('click', '#editButton', function () {
            var personId = $(this).data('id'); // Get the ProductCategoryID from the button's data-id attribute

            // Make an AJAX request to get the data for the selected ProductCategory
            $.ajax({
                url: '/Alumni/Edit/' + personId, // URL to fetch data for the specific category
                type: 'GET',
                success: function (data) {

                    // Show the Edit Modal
                    $('#modalContainer').html(data);

                    //inisialisasi
                    updateDistrictDropdown('/Alumni/ShowDistrictList');
                    updateMajorDropdown('/Alumni/ShowMajorList');
                    reinitializeValidation();

                    // Isi dropdown hobbies
                    var selectedHobbies = $('#ddlHobby').data('selected');
                    if (selectedHobbies) {
                        $('#ddlHobby').val(selectedHobbies);
                    }


                    initializeSelect2('#ddlHobby', 'Select Hobbies', '#editModal');
                    initializeSelect2('#FacultyDropdown', 'Select faculty', '#editModal');
                    initializeSelect2('#DistrictDropdown', 'Select district', '#editModal');



                    // **Handling preview foto yang sudah ada**
                    var existingPhotoUrl = $('#photoPreview').data('src'); // URL foto dari ViewBag.SourceImage
                    if (existingPhotoUrl) {
                        $('#photoPreview').attr('src', existingPhotoUrl).removeClass('d-none');
                    }

                    // **Event listener untuk preview gambar saat file di-upload**
                    $('#photoUpload').on('change', function (event) {
                        var file = event.target.files[0];
                        if (file) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                $('#photoPreview').attr('src', e.target.result).removeClass('d-none');
                            };
                            reader.readAsDataURL(file);
                        }
                    });

                    // **Event listener untuk tombol hapus foto**
                    $('#removePhotoBtn').on('click', function () {
                        $('#photoPreview').attr('src', '#').addClass('d-none');
                        $('#previewName').text('No file selected').removeClass('text-success').addClass('text-muted'); // Kosongkan teks nama file
                        $('#photoUpload').val(''); // Kosongkan input file
                        $('#existingPhoto').val(''); // Hapus nama file di input hidden
                        $(this).addClass('d-none'); // Sembunyikan tombol remove
                    });

                    $('#editModal').modal('show');

                    $('#editModal').on('shown.bs.modal', function () {
                        // Inisialisasi Datepicker setelah modal ditampilkan
                        $('#DateOfBirth').datepicker({
                            format: "dd-M-yyyy",
                            autoclose: true,
                            todayHighlight: true
                        });
                    });

                },
                error: function (xhr) {
                    // Menampilkan pesan error dari response JSON
                    let errorMessage = xhr.responseJSON && xhr.responseJSON.message
                        ? xhr.responseJSON.message
                        : "An unknown error occurred";

                    Swal.fire("Error Load Form", errorMessage, "error");
                }
            });

        });



    </script>
    <script>

    </script>

}

