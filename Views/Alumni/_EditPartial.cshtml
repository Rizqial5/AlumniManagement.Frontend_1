
@model AlumniManagement.Frontend.Models.AlumniModel



<div id="editModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Alumni Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal">
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UpsertAlumni", "Alumni", FormMethod.Post, new { id = "editForm", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.AlumniID)
                    @Html.HiddenFor(model => model.PhotoPath)
                    @Html.HiddenFor(model => model.PhotoName)

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.FirstName)</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.MiddleName)</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.LastName)</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.Gender)</label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(
                                        model => model.Gender,
                                        new SelectList(new List<SelectListItem>
                                        {
                                            new SelectListItem { Text = "Male", Value = "Male" },
                                            new SelectListItem { Text = "Female", Value = "Female" },
                                        }, "Value", "Text"),
                                        "Select Gender",
                                        new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.Email)</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.MobileNumber)</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.Address)</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.StateID)</label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.StateID, (SelectList)ViewBag.StatesDdl, "Select State",
                                        new { @class = "form-control", @id = "StateDropdown" })
                                    @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.DistrictID)</label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.DistrictID, Model.DistrictDDL, "Select District",
                                        new { @class = "form-control", @id = "DistrictDropdown" })
                                    @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>


                        <div class="col-md-6">
                            <div class="form-group d-inline-flex align-items-center mt-2" style="gap: 10px;">
                                <label class="col-form-label text-end">@Html.DisplayNameFor(model => model.DateOfBirth)</label>
                                <div class="input-group ms-4" style="width: auto;">
                                    @Html.TextBoxFor(model => model.DateOfBirth, "{0:dd-MMM-yyyy}", new { @class = "form-control", @id = "DateOfBirth", style = "width: 150px;" })
                                    <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                </div>
                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.HobbiesListName)</label>
                                <div class="col-md-8">
                                    @Html.ListBoxFor(model => model.Hobbies, new MultiSelectList(Model.HobbiesDDl, "Value", "Text"), new { @id = "ddlHobby", @class = "form-control", @multiple = "multiple" })
                                    @Html.ValidationMessageFor(model => model.Hobbies, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.GraduationYear)</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.GraduationYear, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.GraduationYear, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.Degree)</label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(
                                        model => model.Degree,
                                        new SelectList(new List<SelectListItem>
                                        {
                                            new SelectListItem { Text = "D3", Value = "D3" },
                                            new SelectListItem { Text = "S1", Value = "S1" },
                                            new SelectListItem { Text = "S2", Value = "S2" },
                                            new SelectListItem { Text = "S3", Value = "S3" },
                                        }, "Value", "Text"),
                                        "Select Degree",
                                        new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.FacultyID)</label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.FacultyID, (SelectList)ViewBag.FacultyDdl, "Select Faculty",
                                        new { @class = "form-control", @id = "FacultyDropdown" })
                                    @Html.ValidationMessageFor(model => model.FacultyID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.MajorID)</label>
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.MajorID, Model.MajorDDl, "Select Major",
                                        new { @class = "form-control", @id = "MajorDropdown" })
                                    @Html.ValidationMessageFor(model => model.MajorID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row align-items-center mt-2">
                                <label class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.LinkedInProfile)</label>
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.LinkedInProfile, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LinkedInProfile, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group row align-items-center mt-2">
                                    <label class="col-md-4 col-form-label">Upload Photo</label>
                                    <div class="col-md-8">
                                        <input type="file" id="photoUpload" name="photoUpload" class="form-control" accept=".jpeg,.jpg,.png" />
                                        <small class="text-muted">Only .jpeg, .jpg, .png files allowed. Max size: 3MB.</small>
                                        @Html.ValidationMessageFor(model => model.PhotoPath, "", new { @class = "text-danger" })
                                        @if (ViewBag.SourceImage != null && !string.IsNullOrEmpty(ViewBag.SourceImage.ToString()))
                                        {
                                            <div class="mt-2">
                                                <button type="button" id="removePhotoBtn" class="btn btn-sm btn-danger ms-2">Remove</button>
                                            </div>
                                            <input type="hidden" id="existingPhoto" name="existingPhoto" value="@ViewBag.PhotoName" />
                                        }
                                    </div>
                                </div>
                                <div class="form-group mt-2 text-center">
                                    @if (ViewBag.SourceImage != null && !string.IsNullOrEmpty(ViewBag.SourceImage.ToString()))
                                    {
                                        <img id="photoPreview" src="@ViewBag.SourceImage" alt="Photo Preview" class="img-thumbnail" style="max-width: 200px; max-height: 200px;" />
                                    }
                                    else
                                    {
                                        <img id="photoPreview" src="#" alt="Photo Preview" class="img-thumbnail d-none" style="max-width: 200px; max-height: 200px;" />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>



                    <div class="d-flex justify-content-end mt-3">
                        <button type="button" class="btn btn-danger px-4 py-2 me-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary px-4 py-2">Save</button>
                    </div>
                </div>
                }


            </div>
        </div>
    </div>
</div>





