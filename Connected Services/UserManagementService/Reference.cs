//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlumniManagement.Frontend.UserManagementService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserDTO.UserDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class AspNetUserDTOUserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessFailedCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LockoutEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LockoutEndDateUtcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordHashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PhoneNumberConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TwoFactorEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserClaimDTO[] UserClaimsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserLoginDTO[] UserLoginsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserRoleDTO[] UserRolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessFailedCount {
            get {
                return this.AccessFailedCountField;
            }
            set {
                if ((this.AccessFailedCountField.Equals(value) != true)) {
                    this.AccessFailedCountField = value;
                    this.RaisePropertyChanged("AccessFailedCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailConfirmed {
            get {
                return this.EmailConfirmedField;
            }
            set {
                if ((this.EmailConfirmedField.Equals(value) != true)) {
                    this.EmailConfirmedField = value;
                    this.RaisePropertyChanged("EmailConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LockoutEnabled {
            get {
                return this.LockoutEnabledField;
            }
            set {
                if ((this.LockoutEnabledField.Equals(value) != true)) {
                    this.LockoutEnabledField = value;
                    this.RaisePropertyChanged("LockoutEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LockoutEndDateUtc {
            get {
                return this.LockoutEndDateUtcField;
            }
            set {
                if ((this.LockoutEndDateUtcField.Equals(value) != true)) {
                    this.LockoutEndDateUtcField = value;
                    this.RaisePropertyChanged("LockoutEndDateUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PasswordHash {
            get {
                return this.PasswordHashField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordHashField, value) != true)) {
                    this.PasswordHashField = value;
                    this.RaisePropertyChanged("PasswordHash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PhoneNumberConfirmed {
            get {
                return this.PhoneNumberConfirmedField;
            }
            set {
                if ((this.PhoneNumberConfirmedField.Equals(value) != true)) {
                    this.PhoneNumberConfirmedField = value;
                    this.RaisePropertyChanged("PhoneNumberConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityStamp {
            get {
                return this.SecurityStampField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityStampField, value) != true)) {
                    this.SecurityStampField = value;
                    this.RaisePropertyChanged("SecurityStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TwoFactorEnabled {
            get {
                return this.TwoFactorEnabledField;
            }
            set {
                if ((this.TwoFactorEnabledField.Equals(value) != true)) {
                    this.TwoFactorEnabledField = value;
                    this.RaisePropertyChanged("TwoFactorEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserClaimDTO[] UserClaims {
            get {
                return this.UserClaimsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserClaimsField, value) != true)) {
                    this.UserClaimsField = value;
                    this.RaisePropertyChanged("UserClaims");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserLoginDTO[] UserLogins {
            get {
                return this.UserLoginsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLoginsField, value) != true)) {
                    this.UserLoginsField = value;
                    this.RaisePropertyChanged("UserLogins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserRoleDTO[] UserRoles {
            get {
                return this.UserRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRolesField, value) != true)) {
                    this.UserRolesField = value;
                    this.RaisePropertyChanged("UserRoles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserDTO.UserClaimDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class AspNetUserDTOUserClaimDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimType {
            get {
                return this.ClaimTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeField, value) != true)) {
                    this.ClaimTypeField = value;
                    this.RaisePropertyChanged("ClaimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimValue {
            get {
                return this.ClaimValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimValueField, value) != true)) {
                    this.ClaimValueField = value;
                    this.RaisePropertyChanged("ClaimValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserDTO.UserLoginDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class AspNetUserDTOUserLoginDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProviderKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginProvider {
            get {
                return this.LoginProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginProviderField, value) != true)) {
                    this.LoginProviderField = value;
                    this.RaisePropertyChanged("LoginProvider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProviderKey {
            get {
                return this.ProviderKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderKeyField, value) != true)) {
                    this.ProviderKeyField = value;
                    this.RaisePropertyChanged("ProviderKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserDTO.UserRoleDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class AspNetUserDTOUserRoleDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTORoleDTO RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTORoleDTO Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleIdField, value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserDTO.RoleDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class AspNetUserDTORoleDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTORolePermissionDTO[] RolePermissionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTORolePermissionDTO[] RolePermissions {
            get {
                return this.RolePermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RolePermissionsField, value) != true)) {
                    this.RolePermissionsField = value;
                    this.RaisePropertyChanged("RolePermissions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserDTO.RolePermissionDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class AspNetUserDTORolePermissionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTOPermissionDTO PermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTORoleDTO RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOPermissionDTO Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionField, value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PermissionId {
            get {
                return this.PermissionIdField;
            }
            set {
                if ((this.PermissionIdField.Equals(value) != true)) {
                    this.PermissionIdField = value;
                    this.RaisePropertyChanged("PermissionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTORoleDTO Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleIdField, value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AspNetUserDTO.PermissionDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class AspNetUserDTOPermissionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.UserManagementService.AspNetUserDTORolePermissionDTO[] RolePermissionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTORolePermissionDTO[] RolePermissions {
            get {
                return this.RolePermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.RolePermissionsField, value) != true)) {
                    this.RolePermissionsField = value;
                    this.RaisePropertyChanged("RolePermissions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserManagementService.IUserManagementService")]
    public interface IUserManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/IsSuperAdminExists", ReplyAction="http://tempuri.org/IUserManagementService/IsSuperAdminExistsResponse")]
        bool IsSuperAdminExists();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/IsSuperAdminExists", ReplyAction="http://tempuri.org/IUserManagementService/IsSuperAdminExistsResponse")]
        System.Threading.Tasks.Task<bool> IsSuperAdminExistsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RegisterUser", ReplyAction="http://tempuri.org/IUserManagementService/RegisterUserResponse")]
        void RegisterUser(string fullName, string email, string password, bool superAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/RegisterUser", ReplyAction="http://tempuri.org/IUserManagementService/RegisterUserResponse")]
        System.Threading.Tasks.Task RegisterUserAsync(string fullName, string email, string password, bool superAdmin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdatePassword", ReplyAction="http://tempuri.org/IUserManagementService/UpdatePasswordResponse")]
        void UpdatePassword(string id, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdatePassword", ReplyAction="http://tempuri.org/IUserManagementService/UpdatePasswordResponse")]
        System.Threading.Tasks.Task UpdatePasswordAsync(string id, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUser", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserResponse")]
        void UpdateUser(AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUser", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AssignSuperadmin", ReplyAction="http://tempuri.org/IUserManagementService/AssignSuperadminResponse")]
        void AssignSuperadmin(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/AssignSuperadmin", ReplyAction="http://tempuri.org/IUserManagementService/AssignSuperadminResponse")]
        System.Threading.Tasks.Task AssignSuperadminAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUser", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserResponse")]
        void DeleteUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/DeleteUser", ReplyAction="http://tempuri.org/IUserManagementService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUser", ReplyAction="http://tempuri.org/IUserManagementService/GetUserResponse")]
        AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO GetUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUser", ReplyAction="http://tempuri.org/IUserManagementService/GetUserResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO> GetUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllUsers", ReplyAction="http://tempuri.org/IUserManagementService/GetAllUsersResponse")]
        AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetAllUsers", ReplyAction="http://tempuri.org/IUserManagementService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsersByRole", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersByRoleResponse")]
        AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO[] GetUsersByRole(string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUsersByRole", ReplyAction="http://tempuri.org/IUserManagementService/GetUsersByRoleResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO[]> GetUsersByRoleAsync(string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserManagementService/GetUserByEmailResponse")]
        AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserManagementService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUserFullName", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserFullNameResponse")]
        void UpdateUserFullName(string id, string fullName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagementService/UpdateUserFullName", ReplyAction="http://tempuri.org/IUserManagementService/UpdateUserFullNameResponse")]
        System.Threading.Tasks.Task UpdateUserFullNameAsync(string id, string fullName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagementServiceChannel : AlumniManagement.Frontend.UserManagementService.IUserManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagementServiceClient : System.ServiceModel.ClientBase<AlumniManagement.Frontend.UserManagementService.IUserManagementService>, AlumniManagement.Frontend.UserManagementService.IUserManagementService {
        
        public UserManagementServiceClient() {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsSuperAdminExists() {
            return base.Channel.IsSuperAdminExists();
        }
        
        public System.Threading.Tasks.Task<bool> IsSuperAdminExistsAsync() {
            return base.Channel.IsSuperAdminExistsAsync();
        }
        
        public void RegisterUser(string fullName, string email, string password, bool superAdmin) {
            base.Channel.RegisterUser(fullName, email, password, superAdmin);
        }
        
        public System.Threading.Tasks.Task RegisterUserAsync(string fullName, string email, string password, bool superAdmin) {
            return base.Channel.RegisterUserAsync(fullName, email, password, superAdmin);
        }
        
        public void UpdatePassword(string id, string password) {
            base.Channel.UpdatePassword(id, password);
        }
        
        public System.Threading.Tasks.Task UpdatePasswordAsync(string id, string password) {
            return base.Channel.UpdatePasswordAsync(id, password);
        }
        
        public void UpdateUser(AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public void AssignSuperadmin(string id) {
            base.Channel.AssignSuperadmin(id);
        }
        
        public System.Threading.Tasks.Task AssignSuperadminAsync(string id) {
            return base.Channel.AssignSuperadminAsync(id);
        }
        
        public void DeleteUser(string id) {
            base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(string id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO GetUser(string id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO> GetUserAsync(string id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO[] GetUsersByRole(string role) {
            return base.Channel.GetUsersByRole(role);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO[]> GetUsersByRoleAsync(string role) {
            return base.Channel.GetUsersByRoleAsync(role);
        }
        
        public AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.UserManagementService.AspNetUserDTOUserDTO> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public void UpdateUserFullName(string id, string fullName) {
            base.Channel.UpdateUserFullName(id, fullName);
        }
        
        public System.Threading.Tasks.Task UpdateUserFullNameAsync(string id, string fullName) {
            return base.Channel.UpdateUserFullNameAsync(id, fullName);
        }
    }
}
