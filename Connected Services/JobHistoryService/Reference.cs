//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlumniManagement.Frontend.JobHistoryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class JobDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AlumniIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobHistoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AlumniID {
            get {
                return this.AlumniIDField;
            }
            set {
                if ((this.AlumniIDField.Equals(value) != true)) {
                    this.AlumniIDField = value;
                    this.RaisePropertyChanged("AlumniID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobHistoryID {
            get {
                return this.JobHistoryIDField;
            }
            set {
                if ((this.JobHistoryIDField.Equals(value) != true)) {
                    this.JobHistoryIDField = value;
                    this.RaisePropertyChanged("JobHistoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobHistoryService.IJobHistorySerice")]
    public interface IJobHistorySerice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/GetAll", ReplyAction="http://tempuri.org/IJobHistorySerice/GetAllResponse")]
        AlumniManagement.Frontend.JobHistoryService.JobDTO[] GetAll(int alumniId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/GetAll", ReplyAction="http://tempuri.org/IJobHistorySerice/GetAllResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.JobHistoryService.JobDTO[]> GetAllAsync(int alumniId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/GetJob", ReplyAction="http://tempuri.org/IJobHistorySerice/GetJobResponse")]
        AlumniManagement.Frontend.JobHistoryService.JobDTO GetJob(int jobId, int alumniId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/GetJob", ReplyAction="http://tempuri.org/IJobHistorySerice/GetJobResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.JobHistoryService.JobDTO> GetJobAsync(int jobId, int alumniId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/InsertJob", ReplyAction="http://tempuri.org/IJobHistorySerice/InsertJobResponse")]
        void InsertJob(AlumniManagement.Frontend.JobHistoryService.JobDTO jobDTO, int alumniId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/InsertJob", ReplyAction="http://tempuri.org/IJobHistorySerice/InsertJobResponse")]
        System.Threading.Tasks.Task InsertJobAsync(AlumniManagement.Frontend.JobHistoryService.JobDTO jobDTO, int alumniId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/UpdateJob", ReplyAction="http://tempuri.org/IJobHistorySerice/UpdateJobResponse")]
        void UpdateJob(AlumniManagement.Frontend.JobHistoryService.JobDTO jobDTO, int alumniId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/UpdateJob", ReplyAction="http://tempuri.org/IJobHistorySerice/UpdateJobResponse")]
        System.Threading.Tasks.Task UpdateJobAsync(AlumniManagement.Frontend.JobHistoryService.JobDTO jobDTO, int alumniId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/DeleteJob", ReplyAction="http://tempuri.org/IJobHistorySerice/DeleteJobResponse")]
        void DeleteJob(int jobId, int alumniId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobHistorySerice/DeleteJob", ReplyAction="http://tempuri.org/IJobHistorySerice/DeleteJobResponse")]
        System.Threading.Tasks.Task DeleteJobAsync(int jobId, int alumniId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobHistorySericeChannel : AlumniManagement.Frontend.JobHistoryService.IJobHistorySerice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobHistorySericeClient : System.ServiceModel.ClientBase<AlumniManagement.Frontend.JobHistoryService.IJobHistorySerice>, AlumniManagement.Frontend.JobHistoryService.IJobHistorySerice {
        
        public JobHistorySericeClient() {
        }
        
        public JobHistorySericeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobHistorySericeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobHistorySericeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobHistorySericeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AlumniManagement.Frontend.JobHistoryService.JobDTO[] GetAll(int alumniId) {
            return base.Channel.GetAll(alumniId);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.JobHistoryService.JobDTO[]> GetAllAsync(int alumniId) {
            return base.Channel.GetAllAsync(alumniId);
        }
        
        public AlumniManagement.Frontend.JobHistoryService.JobDTO GetJob(int jobId, int alumniId) {
            return base.Channel.GetJob(jobId, alumniId);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.JobHistoryService.JobDTO> GetJobAsync(int jobId, int alumniId) {
            return base.Channel.GetJobAsync(jobId, alumniId);
        }
        
        public void InsertJob(AlumniManagement.Frontend.JobHistoryService.JobDTO jobDTO, int alumniId) {
            base.Channel.InsertJob(jobDTO, alumniId);
        }
        
        public System.Threading.Tasks.Task InsertJobAsync(AlumniManagement.Frontend.JobHistoryService.JobDTO jobDTO, int alumniId) {
            return base.Channel.InsertJobAsync(jobDTO, alumniId);
        }
        
        public void UpdateJob(AlumniManagement.Frontend.JobHistoryService.JobDTO jobDTO, int alumniId) {
            base.Channel.UpdateJob(jobDTO, alumniId);
        }
        
        public System.Threading.Tasks.Task UpdateJobAsync(AlumniManagement.Frontend.JobHistoryService.JobDTO jobDTO, int alumniId) {
            return base.Channel.UpdateJobAsync(jobDTO, alumniId);
        }
        
        public void DeleteJob(int jobId, int alumniId) {
            base.Channel.DeleteJob(jobId, alumniId);
        }
        
        public System.Threading.Tasks.Task DeleteJobAsync(int jobId, int alumniId) {
            return base.Channel.DeleteJobAsync(jobId, alumniId);
        }
    }
}
