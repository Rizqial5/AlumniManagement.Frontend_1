//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlumniManagement.Frontend.PostingJobService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobPostingDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class JobPostingDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClosedDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EmploymentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte MinimumExperienceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SelectedAttachmentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] SelectedSkillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalCandidatesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActiveDetails {
            get {
                return this.ActiveDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveDetailsField, value) != true)) {
                    this.ActiveDetailsField = value;
                    this.RaisePropertyChanged("ActiveDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClosedDetails {
            get {
                return this.ClosedDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ClosedDetailsField, value) != true)) {
                    this.ClosedDetailsField = value;
                    this.RaisePropertyChanged("ClosedDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EmploymentTypeID {
            get {
                return this.EmploymentTypeIDField;
            }
            set {
                if ((this.EmploymentTypeIDField.Equals(value) != true)) {
                    this.EmploymentTypeIDField = value;
                    this.RaisePropertyChanged("EmploymentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClosed {
            get {
                return this.IsClosedField;
            }
            set {
                if ((this.IsClosedField.Equals(value) != true)) {
                    this.IsClosedField = value;
                    this.RaisePropertyChanged("IsClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((this.JobIDField.Equals(value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte MinimumExperience {
            get {
                return this.MinimumExperienceField;
            }
            set {
                if ((this.MinimumExperienceField.Equals(value) != true)) {
                    this.MinimumExperienceField = value;
                    this.RaisePropertyChanged("MinimumExperience");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SelectedAttachmentTypes {
            get {
                return this.SelectedAttachmentTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedAttachmentTypesField, value) != true)) {
                    this.SelectedAttachmentTypesField = value;
                    this.RaisePropertyChanged("SelectedAttachmentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] SelectedSkills {
            get {
                return this.SelectedSkillsField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSkillsField, value) != true)) {
                    this.SelectedSkillsField = value;
                    this.RaisePropertyChanged("SelectedSkills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalCandidates {
            get {
                return this.TotalCandidatesField;
            }
            set {
                if ((this.TotalCandidatesField.Equals(value) != true)) {
                    this.TotalCandidatesField = value;
                    this.RaisePropertyChanged("TotalCandidates");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmploymentTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class EmploymentTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte EmploymentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte EmploymentTypeID {
            get {
                return this.EmploymentTypeIDField;
            }
            set {
                if ((this.EmploymentTypeIDField.Equals(value) != true)) {
                    this.EmploymentTypeIDField = value;
                    this.RaisePropertyChanged("EmploymentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobCandidateDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class JobCandidateDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlumniIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ApplyDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AlumniManagement.Frontend.PostingJobService.JobAttachmentDTO[] JobAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlumniId {
            get {
                return this.AlumniIdField;
            }
            set {
                if ((this.AlumniIdField.Equals(value) != true)) {
                    this.AlumniIdField = value;
                    this.RaisePropertyChanged("AlumniId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ApplyDate {
            get {
                return this.ApplyDateField;
            }
            set {
                if ((this.ApplyDateField.Equals(value) != true)) {
                    this.ApplyDateField = value;
                    this.RaisePropertyChanged("ApplyDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AlumniManagement.Frontend.PostingJobService.JobAttachmentDTO[] JobAttachments {
            get {
                return this.JobAttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.JobAttachmentsField, value) != true)) {
                    this.JobAttachmentsField = value;
                    this.RaisePropertyChanged("JobAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((this.JobIDField.Equals(value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobAttachmentDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class JobAttachmentDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AlumniIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AttachmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid JobIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlumniID {
            get {
                return this.AlumniIDField;
            }
            set {
                if ((this.AlumniIDField.Equals(value) != true)) {
                    this.AlumniIDField = value;
                    this.RaisePropertyChanged("AlumniID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentID {
            get {
                return this.AttachmentIDField;
            }
            set {
                if ((this.AttachmentIDField.Equals(value) != true)) {
                    this.AttachmentIDField = value;
                    this.RaisePropertyChanged("AttachmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AttachmentTypeID {
            get {
                return this.AttachmentTypeIDField;
            }
            set {
                if ((this.AttachmentTypeIDField.Equals(value) != true)) {
                    this.AttachmentTypeIDField = value;
                    this.RaisePropertyChanged("AttachmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid JobID {
            get {
                return this.JobIDField;
            }
            set {
                if ((this.JobIDField.Equals(value) != true)) {
                    this.JobIDField = value;
                    this.RaisePropertyChanged("JobID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkillDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class SkillDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte SkillIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifiedDate {
            get {
                return this.ModifiedDateField;
            }
            set {
                if ((this.ModifiedDateField.Equals(value) != true)) {
                    this.ModifiedDateField = value;
                    this.RaisePropertyChanged("ModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte SkillID {
            get {
                return this.SkillIDField;
            }
            set {
                if ((this.SkillIDField.Equals(value) != true)) {
                    this.SkillIDField = value;
                    this.RaisePropertyChanged("SkillID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttachmentTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/AlumniManagement.WCF.Entities")]
    [System.SerializableAttribute()]
    public partial class AttachmentTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte AttachmentTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AttachmentTypeID {
            get {
                return this.AttachmentTypeIDField;
            }
            set {
                if ((this.AttachmentTypeIDField.Equals(value) != true)) {
                    this.AttachmentTypeIDField = value;
                    this.RaisePropertyChanged("AttachmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PostingJobService.IPostingJobService")]
    public interface IPostingJobService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetJobPostings", ReplyAction="http://tempuri.org/IPostingJobService/GetJobPostingsResponse")]
        AlumniManagement.Frontend.PostingJobService.JobPostingDTO[] GetJobPostings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetJobPostings", ReplyAction="http://tempuri.org/IPostingJobService/GetJobPostingsResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.JobPostingDTO[]> GetJobPostingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetEmploymentTypes", ReplyAction="http://tempuri.org/IPostingJobService/GetEmploymentTypesResponse")]
        AlumniManagement.Frontend.PostingJobService.EmploymentTypeDTO[] GetEmploymentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetEmploymentTypes", ReplyAction="http://tempuri.org/IPostingJobService/GetEmploymentTypesResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.EmploymentTypeDTO[]> GetEmploymentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetAllCandidateBYJObId", ReplyAction="http://tempuri.org/IPostingJobService/GetAllCandidateBYJObIdResponse")]
        AlumniManagement.Frontend.PostingJobService.JobCandidateDTO[] GetAllCandidateBYJObId(System.Guid jobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetAllCandidateBYJObId", ReplyAction="http://tempuri.org/IPostingJobService/GetAllCandidateBYJObIdResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.JobCandidateDTO[]> GetAllCandidateBYJObIdAsync(System.Guid jobID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetSkills", ReplyAction="http://tempuri.org/IPostingJobService/GetSkillsResponse")]
        AlumniManagement.Frontend.PostingJobService.SkillDTO[] GetSkills();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetSkills", ReplyAction="http://tempuri.org/IPostingJobService/GetSkillsResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.SkillDTO[]> GetSkillsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetSkillsByJobId", ReplyAction="http://tempuri.org/IPostingJobService/GetSkillsByJobIdResponse")]
        AlumniManagement.Frontend.PostingJobService.SkillDTO[] GetSkillsByJobId(System.Guid jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetSkillsByJobId", ReplyAction="http://tempuri.org/IPostingJobService/GetSkillsByJobIdResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.SkillDTO[]> GetSkillsByJobIdAsync(System.Guid jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetAttachmentTypes", ReplyAction="http://tempuri.org/IPostingJobService/GetAttachmentTypesResponse")]
        AlumniManagement.Frontend.PostingJobService.AttachmentTypeDTO[] GetAttachmentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetAttachmentTypes", ReplyAction="http://tempuri.org/IPostingJobService/GetAttachmentTypesResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.AttachmentTypeDTO[]> GetAttachmentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/GetJobPostingResponse")]
        AlumniManagement.Frontend.PostingJobService.JobPostingDTO GetJobPosting(System.Guid jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/GetJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/GetJobPostingResponse")]
        System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.JobPostingDTO> GetJobPostingAsync(System.Guid jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/InsertJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/InsertJobPostingResponse")]
        void InsertJobPosting(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/InsertJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/InsertJobPostingResponse")]
        System.Threading.Tasks.Task InsertJobPostingAsync(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/InsertApplyJob", ReplyAction="http://tempuri.org/IPostingJobService/InsertApplyJobResponse")]
        void InsertApplyJob(AlumniManagement.Frontend.PostingJobService.JobAttachmentDTO jobAttachmentDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/InsertApplyJob", ReplyAction="http://tempuri.org/IPostingJobService/InsertApplyJobResponse")]
        System.Threading.Tasks.Task InsertApplyJobAsync(AlumniManagement.Frontend.PostingJobService.JobAttachmentDTO jobAttachmentDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/UpdateJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/UpdateJobPostingResponse")]
        void UpdateJobPosting(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/UpdateJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/UpdateJobPostingResponse")]
        System.Threading.Tasks.Task UpdateJobPostingAsync(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/DeletingJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/DeletingJobPostingResponse")]
        void DeletingJobPosting(System.Guid jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/DeletingJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/DeletingJobPostingResponse")]
        System.Threading.Tasks.Task DeletingJobPostingAsync(System.Guid jobId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/UpsertJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/UpsertJobPostingResponse")]
        void UpsertJobPosting(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPostingJobService/UpsertJobPosting", ReplyAction="http://tempuri.org/IPostingJobService/UpsertJobPostingResponse")]
        System.Threading.Tasks.Task UpsertJobPostingAsync(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPostingJobServiceChannel : AlumniManagement.Frontend.PostingJobService.IPostingJobService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostingJobServiceClient : System.ServiceModel.ClientBase<AlumniManagement.Frontend.PostingJobService.IPostingJobService>, AlumniManagement.Frontend.PostingJobService.IPostingJobService {
        
        public PostingJobServiceClient() {
        }
        
        public PostingJobServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PostingJobServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostingJobServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostingJobServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AlumniManagement.Frontend.PostingJobService.JobPostingDTO[] GetJobPostings() {
            return base.Channel.GetJobPostings();
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.JobPostingDTO[]> GetJobPostingsAsync() {
            return base.Channel.GetJobPostingsAsync();
        }
        
        public AlumniManagement.Frontend.PostingJobService.EmploymentTypeDTO[] GetEmploymentTypes() {
            return base.Channel.GetEmploymentTypes();
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.EmploymentTypeDTO[]> GetEmploymentTypesAsync() {
            return base.Channel.GetEmploymentTypesAsync();
        }
        
        public AlumniManagement.Frontend.PostingJobService.JobCandidateDTO[] GetAllCandidateBYJObId(System.Guid jobID) {
            return base.Channel.GetAllCandidateBYJObId(jobID);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.JobCandidateDTO[]> GetAllCandidateBYJObIdAsync(System.Guid jobID) {
            return base.Channel.GetAllCandidateBYJObIdAsync(jobID);
        }
        
        public AlumniManagement.Frontend.PostingJobService.SkillDTO[] GetSkills() {
            return base.Channel.GetSkills();
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.SkillDTO[]> GetSkillsAsync() {
            return base.Channel.GetSkillsAsync();
        }
        
        public AlumniManagement.Frontend.PostingJobService.SkillDTO[] GetSkillsByJobId(System.Guid jobId) {
            return base.Channel.GetSkillsByJobId(jobId);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.SkillDTO[]> GetSkillsByJobIdAsync(System.Guid jobId) {
            return base.Channel.GetSkillsByJobIdAsync(jobId);
        }
        
        public AlumniManagement.Frontend.PostingJobService.AttachmentTypeDTO[] GetAttachmentTypes() {
            return base.Channel.GetAttachmentTypes();
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.AttachmentTypeDTO[]> GetAttachmentTypesAsync() {
            return base.Channel.GetAttachmentTypesAsync();
        }
        
        public AlumniManagement.Frontend.PostingJobService.JobPostingDTO GetJobPosting(System.Guid jobId) {
            return base.Channel.GetJobPosting(jobId);
        }
        
        public System.Threading.Tasks.Task<AlumniManagement.Frontend.PostingJobService.JobPostingDTO> GetJobPostingAsync(System.Guid jobId) {
            return base.Channel.GetJobPostingAsync(jobId);
        }
        
        public void InsertJobPosting(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO) {
            base.Channel.InsertJobPosting(jobPostingDTO);
        }
        
        public System.Threading.Tasks.Task InsertJobPostingAsync(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO) {
            return base.Channel.InsertJobPostingAsync(jobPostingDTO);
        }
        
        public void InsertApplyJob(AlumniManagement.Frontend.PostingJobService.JobAttachmentDTO jobAttachmentDTO) {
            base.Channel.InsertApplyJob(jobAttachmentDTO);
        }
        
        public System.Threading.Tasks.Task InsertApplyJobAsync(AlumniManagement.Frontend.PostingJobService.JobAttachmentDTO jobAttachmentDTO) {
            return base.Channel.InsertApplyJobAsync(jobAttachmentDTO);
        }
        
        public void UpdateJobPosting(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO) {
            base.Channel.UpdateJobPosting(jobPostingDTO);
        }
        
        public System.Threading.Tasks.Task UpdateJobPostingAsync(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO) {
            return base.Channel.UpdateJobPostingAsync(jobPostingDTO);
        }
        
        public void DeletingJobPosting(System.Guid jobId) {
            base.Channel.DeletingJobPosting(jobId);
        }
        
        public System.Threading.Tasks.Task DeletingJobPostingAsync(System.Guid jobId) {
            return base.Channel.DeletingJobPostingAsync(jobId);
        }
        
        public void UpsertJobPosting(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO) {
            base.Channel.UpsertJobPosting(jobPostingDTO);
        }
        
        public System.Threading.Tasks.Task UpsertJobPostingAsync(AlumniManagement.Frontend.PostingJobService.JobPostingDTO jobPostingDTO) {
            return base.Channel.UpsertJobPostingAsync(jobPostingDTO);
        }
    }
}
